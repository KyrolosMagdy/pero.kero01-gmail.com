{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\src\\\\components\\\\form\\\\form.component.jsx\";\nimport React, { useState } from 'react';\nimport './form.styles.css';\n\nconst Form = () => {\n  const {\n    firstName,\n    setFirstName\n  } = useState('');\n  const {\n    lastName,\n    setLastName\n  } = useState('');\n  const {\n    email,\n    setEmail\n  } = useState('');\n  const {\n    password,\n    setPassword\n  } = useState('');\n  const {\n    formErrors,\n    setFormErrors\n  } = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  });\n  const emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n  const formValid = ({\n    formErrors,\n    ...rest\n  }) => {\n    let valid = true;\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 ? valid = false : valid = true;\n    });\n    Object.values(rest).forEach(val => {\n      !val.length && (valid = false);\n    });\n    return valid;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let currentState = {\n      formErrors,\n      firstName,\n      lastName,\n      email,\n      password\n    };\n\n    if (formValid(currentState)) {\n      console.log(`\n                Submitting\n                First Name: ${firstName}\n                lastName: ${lastName},\n                email: ${email},\n                password: ${password},\n            `);\n    } else {\n      console.error('error');\n    }\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName = value.length < 3 ? 'Minimum 3 characaters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName = value.length < 3 ? 'Minimum 3 characaters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\n        break;\n\n      case 'password':\n        formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    setFormErrors(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" Create account \"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" First Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: formErrors.firstName.length > 0 ? \"error\" : null,\n    placeholder: \"First Name\",\n    name: \"firstName\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \", formErrors.firstName, \" \")), React.createElement(\"div\", {\n    className: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" Last Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: formErrors.lastName.length > 0 ? \"error\" : null,\n    placeholder: \"Last Name\",\n    name: \"lastName\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" \", formErrors.lastName, \" \")), React.createElement(\"div\", {\n    className: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" E-Mail: \"), React.createElement(\"input\", {\n    type: \"email\",\n    className: formErrors.email.length > 0 ? \"error\" : null,\n    placeholder: \"E-Mail\",\n    name: \"email\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), formErrors.email.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \" \", formErrors.email, \" \")), React.createElement(\"div\", {\n    className: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \" Password: \"), React.createElement(\"input\", {\n    type: \"password\",\n    className: formErrors.password.length > 0 ? \"error\" : null,\n    placeholder: \"Password\",\n    name: \"password\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), formErrors.password.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \" \", formErrors.password, \" \")), React.createElement(\"div\", {\n    className: \"createAccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \" Create Account\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \" Already have an account\")))));\n}; // const emailRegex = RegExp(\n//   /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n// );\n// const formValid = ({formErrors, ...rest}) => {\n//   let valid = true;\n//   Object.values(formErrors).forEach(val => {\n//     val.length > 0 ? valid = false : valid = true\n//   })\n//   Object.values(rest).forEach( val => {\n//     !val.length && (valid = false)\n//   })\n//   return valid;\n// }\n// class Form extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       firstName: \"\",\n//       lastName: \"\",\n//       email: \"\",\n//       password: \"\",\n//       formErrors: {\n//         firstName: \"\",\n//         lastName: \"\",\n//         email: \"\",\n//         password: \"\",\n//       }\n//     }\n//   }\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (formValid(this.state)) {\n//       console.log(`\n//         Submitting\n//         First Name: ${this.state.firstName}\n//         lastName: ${this.state.lastName},\n//         email: ${this.state.email},\n//         password: ${this.state.password},\n//       `)\n//     } else{\n//       console.error('error')\n//     }\n//   };\n//   handleChange = (event) => {\n//     event.preventDefault();\n//     const { name, value } = event.target;\n//     let formErrors = this.state.formErrors;\n//     switch (name) {\n//       case 'firstName':\n//         formErrors.firstName = value.length < 3  ? 'Minimum 3 characaters required' : '';\n//         break;\n//       case 'lastName':\n//         formErrors.lastName = value.length < 3  ? 'Minimum 3 characaters required' : '';\n//         break;\n//       case 'email':\n//         formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\n//         break;\n//       case 'password':\n//         formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\n//         break;\n//       default:\n//         break;  \n//     }\n//     this.setState({\n//       formErrors, [name]: value\n//     }, () => console.log(this.state))\n//   }\n//   render() {\n//     const {firstName, setFirstName } = useState('');\n//     const {formErrors} = this.state;\n//     return (\n//       <div className=\"wrapper\" >\n//         <div className=\"form-wrapper\">\n//           <h1> Create account </h1>\n//           <form onSubmit={this.handleSubmit} noValidate>\n//             <div className=\"firstName\" >\n//               <label htmlFor=\"firstName\" > First Name: </label>\n//               <input\n//                 type=\"text\" \n//                 className={formErrors.firstName.length > 0 ? \"error\" : null} \n//                 placeholder=\"First Name\"\n//                 name=\"firstName\" \n//                 noValidate \n//                 onChange={this.handleChange}\n//                 />\n//                 {formErrors.firstName.length > 0 && \n//                   <span className=\"errorMessage\"> {formErrors.firstName} </span> \n//                 }\n//             </div>\n//             <div className=\"lastName\" >\n//               <label htmlFor=\"lastName\" > Last Name: </label>\n//               <input\n//                 type=\"text\" \n//                 className={formErrors.lastName.length > 0 ? \"error\" : null}  \n//                 placeholder=\"Last Name\"\n//                 name=\"lastName\" \n//                 noValidate \n//                 onChange={this.handleChange}\n//                 />\n//                 {formErrors.lastName.length > 0 && \n//                   <span className=\"errorMessage\"> {formErrors.lastName} </span> \n//                 }\n//             </div>\n//             <div className=\"email\" >\n//               <label htmlFor=\"email\" > E-Mail: </label>\n//               <input\n//                 type=\"email\" \n//                 className={formErrors.email.length > 0 ? \"error\" : null}  \n//                 placeholder=\"E-Mail\"\n//                 name=\"email\" \n//                 noValidate \n//                 onChange={this.handleChange}\n//                 />\n//                 {formErrors.email.length > 0 && \n//                   <span className=\"errorMessage\"> {formErrors.email} </span> \n//                 }\n//             </div>\n//             <div className=\"password\" >\n//               <label htmlFor=\"password\" > Password: </label>\n//               <input\n//                 type=\"password\" \n//                 className={formErrors.password.length > 0 ? \"error\" : null} \n//                 placeholder=\"Password\"\n//                 name=\"password\" \n//                 noValidate \n//                 onChange={this.handleChange}\n//                 />\n//                 {formErrors.password.length > 0 && \n//                   <span className=\"errorMessage\"> {formErrors.password} </span> \n//                 }\n//             </div>\n//             <div className=\"createAccount\" >\n//               <button type=\"submit\"> Create Account</button>\n//               <small> Already have an account</small>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default Form;","map":{"version":3,"sources":["E:/javascript/formvalidation/src/components/form/form.component.jsx"],"names":["React","useState","Form","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","formErrors","setFormErrors","emailRegex","RegExp","formValid","rest","valid","Object","values","forEach","val","length","handleSubmit","event","preventDefault","currentState","console","log","error","handleChange","name","value","target","test","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './form.styles.css';\r\n\r\n\r\nconst Form = () => {\r\n    const {firstName, setFirstName } = useState('');\r\n    const {lastName, setLastName } = useState('');\r\n    const {email, setEmail } = useState('');\r\n    const {password, setPassword } = useState('');\r\n    const {formErrors, setFormErrors } = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    \r\n    const emailRegex = RegExp(\r\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    );\r\n\r\n    const formValid = ({formErrors, ...rest}) => {\r\n        let valid = true;\r\n        Object.values(formErrors).forEach(val => {\r\n            val.length > 0 ? valid = false : valid = true\r\n        })\r\n        Object.values(rest).forEach(val => {\r\n            !val.length && (valid = false)\r\n        })\r\n        return valid;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let currentState = {\r\n            formErrors,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            password\r\n        };\r\n        if (formValid(currentState)) {\r\n            console.log(`\r\n                Submitting\r\n                First Name: ${firstName}\r\n                lastName: ${lastName},\r\n                email: ${email},\r\n                password: ${password},\r\n            `)\r\n        } else {\r\n            console.error('error')\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'firstName':\r\n                formErrors.firstName = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                break;\r\n\r\n            case 'lastName':\r\n                formErrors.lastName = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                break;\r\n\r\n            case 'email':\r\n                formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\r\n                break;\r\n\r\n            case 'password':\r\n                formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        setFormErrors(prevState => {\r\n            return {...prevState, [name]: value}\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <div className=\"form-wrapper\">\r\n                <h1> Create account </h1>\r\n                <form onSubmit={this.handleSubmit} noValidate>\r\n                    <div className=\"firstName\" >\r\n                        <label htmlFor=\"firstName\" > First Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                            placeholder=\"First Name\"\r\n                            name=\"firstName\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.firstName.length > 0 &&\r\n                            <span className=\"errorMessage\"> {formErrors.firstName} </span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"lastName\" >\r\n                        <label htmlFor=\"lastName\" > Last Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                            placeholder=\"Last Name\"\r\n                            name=\"lastName\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.lastName.length > 0 &&\r\n                            <span className=\"errorMessage\"> {formErrors.lastName} </span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"email\" >\r\n                        <label htmlFor=\"email\" > E-Mail: </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                            placeholder=\"E-Mail\"\r\n                            name=\"email\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.email.length > 0 &&\r\n                            <span className=\"errorMessage\"> {formErrors.email} </span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"password\" >\r\n                        <label htmlFor=\"password\" > Password: </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={formErrors.password.length > 0 ? \"error\" : null}\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            noValidate\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.password.length > 0 &&\r\n                            <span className=\"errorMessage\"> {formErrors.password} </span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"createAccount\" >\r\n                        <button type=\"submit\"> Create Account</button>\r\n                        <small> Already have an account</small>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// const emailRegex = RegExp(\r\n//   /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n// );\r\n\r\n// const formValid = ({formErrors, ...rest}) => {\r\n//   let valid = true;\r\n\r\n//   Object.values(formErrors).forEach(val => {\r\n//     val.length > 0 ? valid = false : valid = true\r\n//   })\r\n\r\n//   Object.values(rest).forEach( val => {\r\n//     !val.length && (valid = false)\r\n//   })\r\n//   return valid;\r\n// }\r\n\r\n// class Form extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       firstName: \"\",\r\n//       lastName: \"\",\r\n//       email: \"\",\r\n//       password: \"\",\r\n//       formErrors: {\r\n//         firstName: \"\",\r\n//         lastName: \"\",\r\n//         email: \"\",\r\n//         password: \"\",\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (formValid(this.state)) {\r\n//       console.log(`\r\n//         Submitting\r\n//         First Name: ${this.state.firstName}\r\n//         lastName: ${this.state.lastName},\r\n//         email: ${this.state.email},\r\n//         password: ${this.state.password},\r\n//       `)\r\n//     } else{\r\n//       console.error('error')\r\n//     }\r\n//   };\r\n\r\n//   handleChange = (event) => {\r\n//     event.preventDefault();\r\n//     const { name, value } = event.target;\r\n//     let formErrors = this.state.formErrors;\r\n\r\n//     switch (name) {\r\n//       case 'firstName':\r\n//         formErrors.firstName = value.length < 3  ? 'Minimum 3 characaters required' : '';\r\n//         break;\r\n\r\n//       case 'lastName':\r\n//         formErrors.lastName = value.length < 3  ? 'Minimum 3 characaters required' : '';\r\n//         break;\r\n//       case 'email':\r\n//         formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\r\n//         break;\r\n//       case 'password':\r\n//         formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\r\n//         break;\r\n\r\n//       default:\r\n//         break;  \r\n//     }\r\n//     this.setState({\r\n//       formErrors, [name]: value\r\n//     }, () => console.log(this.state))\r\n//   }\r\n\r\n//   render() {\r\n\r\n//     const {firstName, setFirstName } = useState('');\r\n//     const {formErrors} = this.state;\r\n//     return (\r\n//       <div className=\"wrapper\" >\r\n//         <div className=\"form-wrapper\">\r\n//           <h1> Create account </h1>\r\n//           <form onSubmit={this.handleSubmit} noValidate>\r\n//             <div className=\"firstName\" >\r\n//               <label htmlFor=\"firstName\" > First Name: </label>\r\n//               <input\r\n//                 type=\"text\" \r\n//                 className={formErrors.firstName.length > 0 ? \"error\" : null} \r\n//                 placeholder=\"First Name\"\r\n//                 name=\"firstName\" \r\n//                 noValidate \r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 {formErrors.firstName.length > 0 && \r\n//                   <span className=\"errorMessage\"> {formErrors.firstName} </span> \r\n//                 }\r\n//             </div>\r\n//             <div className=\"lastName\" >\r\n//               <label htmlFor=\"lastName\" > Last Name: </label>\r\n//               <input\r\n//                 type=\"text\" \r\n//                 className={formErrors.lastName.length > 0 ? \"error\" : null}  \r\n//                 placeholder=\"Last Name\"\r\n//                 name=\"lastName\" \r\n//                 noValidate \r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 {formErrors.lastName.length > 0 && \r\n//                   <span className=\"errorMessage\"> {formErrors.lastName} </span> \r\n//                 }\r\n//             </div>\r\n//             <div className=\"email\" >\r\n//               <label htmlFor=\"email\" > E-Mail: </label>\r\n//               <input\r\n//                 type=\"email\" \r\n//                 className={formErrors.email.length > 0 ? \"error\" : null}  \r\n//                 placeholder=\"E-Mail\"\r\n//                 name=\"email\" \r\n//                 noValidate \r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 {formErrors.email.length > 0 && \r\n//                   <span className=\"errorMessage\"> {formErrors.email} </span> \r\n//                 }\r\n//             </div>\r\n//             <div className=\"password\" >\r\n//               <label htmlFor=\"password\" > Password: </label>\r\n//               <input\r\n//                 type=\"password\" \r\n//                 className={formErrors.password.length > 0 ? \"error\" : null} \r\n//                 placeholder=\"Password\"\r\n//                 name=\"password\" \r\n//                 noValidate \r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 {formErrors.password.length > 0 && \r\n//                   <span className=\"errorMessage\"> {formErrors.password} </span> \r\n//                 }\r\n//             </div>\r\n//             <div className=\"createAccount\" >\r\n//               <button type=\"submit\"> Create Account</button>\r\n//               <small> Already have an account</small>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}