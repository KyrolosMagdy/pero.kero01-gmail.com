{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\front-end\\\\src\\\\components\\\\table-wrapper\\\\table-wrapper.component.jsx\";\nimport React, { Fragment } from 'react';\nimport Message from '../feed/feedPost/feedPost.component';\nimport Button from '../button/button.component';\nimport ErrorHandler from '../ErrorHandler/ErrorHandler.component';\nimport Paginator from '../Paginator/Paginator.component';\nimport Loader from '../Loader/Loader';\n\nclass TableWrapper extends React.Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n\n    this.loadPosts = direction => {\n      if (direction) {\n        this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      let page = this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n        this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n        this.setState({\n          postPage: page\n        });\n      }\n\n      fetch('URL').then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.setState({\n          posts: resData.posts,\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(this.catchError);\n    };\n\n    this.statusUpdateHandler = event => {\n      event.preventDefault();\n      fetch('URL').then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(this.catchError);\n    };\n\n    this.newPostHandler = () => {\n      this.setState({\n        isEditing: true\n      });\n    };\n\n    this.startEditPostHandler = postId => {\n      this.setState(prevState => {\n        const loadedPost = { ...prevState.posts.find(p => p._id === postId)\n        };\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    this.cancelEditHandler = () => {\n      this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    this.finishEditHandler = postData => {\n      this.setState({\n        editLoading: true\n      }); // Set up data (with image!)\n\n      let url = 'URL';\n\n      if (this.state.editPost) {\n        url = 'URL';\n      }\n\n      fetch(url).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(p => p._id === prevState.editPost._id);\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    this.statusInputChangeHandler = (input, value) => {\n      this.setState({\n        status: value\n      });\n    };\n\n    this.deletePostHandler = postId => {\n      this.setState({\n        postsLoading: true\n      });\n      fetch('URL').then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n          return {\n            posts: updatedPosts,\n            postsLoading: false\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    this.errorHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n\n    this.catchError = error => {\n      this.setState({\n        error: error\n      });\n    };\n\n    this.state = {\n      //state is by default an object\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/messages/feed').then(res => {\n      if (res.status !== 200) {\n        throw new Error('Failed to fetch user status.');\n      }\n\n      return res.json();\n    }).then(resData => {\n      this.setState({\n        status: resData.status\n      });\n    }).catch(this.catchError);\n    this.loadPosts();\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(ErrorHandler, {\n      error: this.state.error,\n      onHandle: this.errorHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"feed__status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.statusUpdateHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button, {\n      mode: \"flat\",\n      type: \"submit\",\n      buttonContent: 'Update',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), React.createElement(\"section\", {\n      className: \"feed__control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Button, {\n      mode: \"raised\",\n      design: \"accent\",\n      onClick: this.newPostHandler,\n      buttonContent: 'New Post',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.postsLoading && React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), this.state.posts.length <= 0 && !this.state.postsLoading ? React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"No posts found.\") : null, !this.state.postsLoading && React.createElement(Paginator, {\n      onPrevious: this.loadPosts.bind(this, 'previous'),\n      onNext: this.loadPosts.bind(this, 'next'),\n      lastPage: Math.ceil(this.state.totalPosts / 2),\n      currentPage: this.state.postPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.posts.map(post => React.createElement(Message, {\n      key: post._id,\n      id: post._id,\n      author: post.creator.name,\n      date: new Date(post.createdAt).toLocaleDateString('en-US'),\n      title: post.title,\n      image: post.imageUrl,\n      content: post.content,\n      onStartEdit: this.startEditPostHandler.bind(this, post._id),\n      onDelete: this.deletePostHandler.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TableWrapper;","map":{"version":3,"sources":["E:/javascript/formvalidation/front-end/src/components/table-wrapper/table-wrapper.component.jsx"],"names":["React","Fragment","Message","Button","ErrorHandler","Paginator","Loader","TableWrapper","Component","constructor","props","loadPosts","direction","setState","postsLoading","posts","page","state","postPage","fetch","then","res","status","Error","json","resData","totalPosts","totalItems","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","isEditing","startEditPostHandler","postId","prevState","loadedPost","find","p","_id","editPost","cancelEditHandler","finishEditHandler","postData","editLoading","url","post","title","content","creator","createdAt","updatedPosts","postIndex","findIndex","length","concat","err","error","statusInputChangeHandler","input","value","deletePostHandler","filter","errorHandler","componentDidMount","render","textAlign","marginTop","bind","Math","ceil","map","name","Date","toLocaleDateString","imageUrl"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport Message from '../feed/feedPost/feedPost.component';\r\nimport Button from '../button/button.component';\r\nimport ErrorHandler from '../ErrorHandler/ErrorHandler.component';\r\nimport Paginator from '../Paginator/Paginator.component';\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\nclass TableWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\r\n        this.state = { //state is by default an object\r\n            isEditing: false,\r\n            posts: [],\r\n            totalPosts: 0,\r\n            editPost: null,\r\n            status: '',\r\n            postPage: 1,\r\n            postsLoading: true,\r\n            editLoading: false\r\n        }\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/messages/feed')\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch user status.');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState({ status: resData.status });\r\n            })\r\n            .catch(this.catchError);\r\n\r\n        this.loadPosts();\r\n    }\r\n\r\n    loadPosts = direction => {\r\n        if (direction) {\r\n            this.setState({ postsLoading: true, posts: [] });\r\n        }\r\n        let page = this.state.postPage;\r\n        if (direction === 'next') {\r\n            page++;\r\n            this.setState({ postPage: page });\r\n        }\r\n        if (direction === 'previous') {\r\n            page--;\r\n            this.setState({ postPage: page });\r\n        }\r\n        fetch('URL')\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error('Failed to fetch posts.');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                this.setState({\r\n                    posts: resData.posts,\r\n                    totalPosts: resData.totalItems,\r\n                    postsLoading: false\r\n                });\r\n            })\r\n            .catch(this.catchError);\r\n    };\r\n\r\n    statusUpdateHandler = event => {\r\n        event.preventDefault();\r\n        fetch('URL')\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error(\"Can't update status!\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                console.log(resData);\r\n            })\r\n            .catch(this.catchError);\r\n    };\r\n\r\n    newPostHandler = () => {\r\n        this.setState({ isEditing: true });\r\n    };\r\n\r\n    startEditPostHandler = postId => {\r\n        this.setState(prevState => {\r\n            const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\r\n\r\n            return {\r\n                isEditing: true,\r\n                editPost: loadedPost\r\n            };\r\n        });\r\n    };\r\n\r\n    cancelEditHandler = () => {\r\n        this.setState({ isEditing: false, editPost: null });\r\n    };\r\n\r\n    finishEditHandler = postData => {\r\n        this.setState({\r\n            editLoading: true\r\n        });\r\n        // Set up data (with image!)\r\n        let url = 'URL';\r\n        if (this.state.editPost) {\r\n            url = 'URL';\r\n        }\r\n\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Creating or editing a post failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                const post = {\r\n                    _id: resData.post._id,\r\n                    title: resData.post.title,\r\n                    content: resData.post.content,\r\n                    creator: resData.post.creator,\r\n                    createdAt: resData.post.createdAt\r\n                };\r\n                this.setState(prevState => {\r\n                    let updatedPosts = [...prevState.posts];\r\n                    if (prevState.editPost) {\r\n                        const postIndex = prevState.posts.findIndex(\r\n                            p => p._id === prevState.editPost._id\r\n                        );\r\n                        updatedPosts[postIndex] = post;\r\n                    } else if (prevState.posts.length < 2) {\r\n                        updatedPosts = prevState.posts.concat(post);\r\n                    }\r\n                    return {\r\n                        posts: updatedPosts,\r\n                        isEditing: false,\r\n                        editPost: null,\r\n                        editLoading: false\r\n                    };\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    isEditing: false,\r\n                    editPost: null,\r\n                    editLoading: false,\r\n                    error: err\r\n                });\r\n            });\r\n    };\r\n\r\n    statusInputChangeHandler = (input, value) => {\r\n        this.setState({ status: value });\r\n    };\r\n\r\n    deletePostHandler = postId => {\r\n        this.setState({ postsLoading: true });\r\n        fetch('URL')\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Deleting a post failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                console.log(resData);\r\n                this.setState(prevState => {\r\n                    const updatedPosts = prevState.posts.filter(p => p._id !== postId);\r\n                    return { posts: updatedPosts, postsLoading: false };\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ postsLoading: false });\r\n            });\r\n    };\r\n\r\n    errorHandler = () => {\r\n        this.setState({ error: null });\r\n    };\r\n\r\n    catchError = error => {\r\n        this.setState({ error: error });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\r\n                <section className=\"feed__status\">\r\n                    <form onSubmit={this.statusUpdateHandler}>\r\n                        <Button mode=\"flat\" type=\"submit\" buttonContent={'Update'} />\r\n                    </form>\r\n                </section>\r\n                <section className=\"feed__control\">\r\n                    <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler} buttonContent={'New Post'} />\r\n                </section>\r\n                <section className=\"feed\">\r\n                    {this.state.postsLoading && (\r\n                        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n                    {this.state.posts.length <= 0 && !this.state.postsLoading ? (\r\n                        <p style={{ textAlign: 'center' }}>No posts found.</p>\r\n                    ) : null}\r\n                    {!this.state.postsLoading && (\r\n                        <Paginator\r\n                            onPrevious={this.loadPosts.bind(this, 'previous')}\r\n                            onNext={this.loadPosts.bind(this, 'next')}\r\n                            lastPage={Math.ceil(this.state.totalPosts / 2)}\r\n                            currentPage={this.state.postPage}\r\n                        >\r\n                            {this.state.posts.map(post => (\r\n                                <Message\r\n                                    key={post._id}\r\n                                    id={post._id}\r\n                                    author={post.creator.name}\r\n                                    date={new Date(post.createdAt).toLocaleDateString('en-US')}\r\n                                    title={post.title}\r\n                                    image={post.imageUrl}\r\n                                    content={post.content}\r\n                                    onStartEdit={this.startEditPostHandler.bind(this, post._id)}\r\n                                    onDelete={this.deletePostHandler.bind(this, post._id)}\r\n                                />\r\n                            ))}\r\n                        </Paginator>\r\n                    )}\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableWrapper;"]},"metadata":{},"sourceType":"module"}