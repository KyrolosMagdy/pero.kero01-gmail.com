{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\src\\\\components\\\\message-inputs\\\\message-inputs.component.jsx\";\nimport React from 'react';\nimport './message-input.styles.css';\n\nclass InputsForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      console.log(`name: ${name},\n        value: ${value}\n    `);\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const {\n        onClick\n      } = this.props;\n      onClick();\n    };\n\n    this.state = {\n      messageTitle: '',\n      messageContent: '',\n      to: '',\n      formErrors: {\n        messageTo: '',\n        messageTitle: '',\n        messageContent: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"remove-button\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\u2715\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Send a New Message \"), React.createElement(\"form\", {\n      onSubmit: this.handleInputChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messageTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" To: \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: this.state.formErrors.messageTo.length > 0 ? \"error\" : null,\n      placeholder: \"Email like asfdfgd12@jhffd.com\",\n      name: \"messageTo\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.formErrors.messageTo.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageTo, \" \")), React.createElement(\"div\", {\n      className: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Title: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: this.state.formErrors.messageTitle.length > 0 ? \"error\" : null,\n      placeholder: \"Add Message title\",\n      name: \"messageTitle\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.formErrors.messageTitle.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageTitle, \" \")), React.createElement(\"div\", {\n      className: \"messageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Message: \"), React.createElement(\"textarea\", {\n      type: \"messageContent\",\n      className: this.state.formErrors.messageContent.length > 0 ? \"error\" : 'textarea',\n      placeholder: \"Enter Your Message\",\n      name: \"messageContent\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.state.formErrors.messageContent.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageContent, \" \")), React.createElement(\"div\", {\n      className: \"messageButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Send Message \"))))) // <div className='container' >\n    //     <div className='form-wrapper'>\n    //         <form>\n    //             <label>To: </label>\n    //             <input\n    //                 type='email'\n    //                 name='messageTo'\n    //                 onChange={this.handleInputChange}\n    //             />\n    //             <label> Title </label>\n    //             <input\n    //                 type='text'\n    //                 name='messageTitle'\n    //                 onChange={this.handleInputChange}\n    //             />\n    //             <textarea name='messageContent' onChange={this.handleInputChange} />\n    //         </form>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default InputsForm;","map":{"version":3,"sources":["E:/javascript/formvalidation/src/components/message-inputs/message-inputs.component.jsx"],"names":["React","InputsForm","Component","constructor","props","handleInputChange","e","name","value","target","console","log","handleClick","preventDefault","onClick","state","messageTitle","messageContent","to","formErrors","messageTo","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './message-input.styles.css';\r\n\r\nclass InputsForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messageTitle: '',\r\n            messageContent: '',\r\n            to: '',\r\n            formErrors: {\r\n                messageTo: '',\r\n                messageTitle: '',\r\n                messageContent: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(`name: ${name},\r\n        value: ${value}\r\n    `)\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        const {onClick} = this.props;\r\n        onClick();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper-2\" >\r\n                <div className=\"form-wrapper\">\r\n                <div className='remove-button' onClick={this.handleClick}>\r\n                    &#10005;\r\n                </div>\r\n\r\n\r\n                    <h1> Send a New Message </h1>\r\n                    <form onSubmit={this.handleInputChange} noValidate>\r\n                        <div className=\"messageTo\" >\r\n                            <label htmlFor=\"messageTo\" > To: </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className={this.state.formErrors.messageTo.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Email like asfdfgd12@jhffd.com\"\r\n                                name=\"messageTo\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageTo.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageTo} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageTitle\" >\r\n                            <label htmlFor=\"messageTitle\" > Title: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={this.state.formErrors.messageTitle.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Add Message title\"\r\n                                name=\"messageTitle\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageTitle.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageTitle} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageContent\" >\r\n                            <label htmlFor=\"messageContent\" > Message: </label>\r\n                            <textarea\r\n                                type=\"messageContent\"\r\n                                className={this.state.formErrors.messageContent.length > 0 ? \"error\" : 'textarea'}\r\n                                placeholder=\"Enter Your Message\"\r\n                                name=\"messageContent\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageContent.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageContent} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageButton\" >\r\n                            <button type=\"submit\"> Send Message </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            // <div className='container' >\r\n            //     <div className='form-wrapper'>\r\n            //         <form>\r\n            //             <label>To: </label>\r\n            //             <input\r\n            //                 type='email'\r\n            //                 name='messageTo'\r\n            //                 onChange={this.handleInputChange}\r\n            //             />\r\n            //             <label> Title </label>\r\n            //             <input\r\n            //                 type='text'\r\n            //                 name='messageTitle'\r\n            //                 onChange={this.handleInputChange}\r\n            //             />\r\n\r\n            //             <textarea name='messageContent' onChange={this.handleInputChange} />\r\n            //         </form>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default InputsForm;"]},"metadata":{},"sourceType":"module"}