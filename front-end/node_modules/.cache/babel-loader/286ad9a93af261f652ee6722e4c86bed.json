{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\src\\\\components\\\\form\\\\form.component.jsx\";\nimport React, { Component } from 'react';\nimport './form.styles.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 ? valid = false : valid = true;\n  });\n  Object.values(rest).forEach(val => {\n    !val.length && (valid = false);\n  });\n  return valid;\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n        Submitting\n        First Name: ${this.state.firstName}\n        lastName: ${this.state.lastName},\n        email: ${this.state.email},\n        password: ${this.state.password},\n      `);\n      } else {\n        console.error('error');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstName = value.length < 3 ? 'Minimum 3 characaters required' : '';\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length < 3 ? 'Minimum 3 characaters required' : '';\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" Create account \"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" First Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: formErrors.firstName.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", formErrors.firstName, \" \")), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" Last Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: formErrors.lastName.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", formErrors.lastName, \" \")), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" E-Mail: \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"E-Mail\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \", formErrors.email, \" \")), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" \", formErrors.password, \" \")), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Create Account\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" Already have an account\")))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["E:/javascript/formvalidation/src/components/form/form.component.jsx"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Form","constructor","props","handleSubmit","event","preventDefault","state","console","log","firstName","lastName","email","password","error","handleChange","name","value","target","test","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './form.styles.css';\r\n\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 ? valid = false : valid = true\r\n    })\r\n\r\n    Object.values(rest).forEach(val => {\r\n        !val.length && (valid = false)\r\n    })\r\n    return valid;\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            formErrors: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (formValid(this.state)) {\r\n            console.log(`\r\n        Submitting\r\n        First Name: ${this.state.firstName}\r\n        lastName: ${this.state.lastName},\r\n        email: ${this.state.email},\r\n        password: ${this.state.password},\r\n      `)\r\n        } else {\r\n            console.error('error')\r\n        }\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                formErrors.firstName = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                break;\r\n\r\n            case 'lastName':\r\n                formErrors.lastName = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                break;\r\n            case 'email':\r\n                formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\r\n                break;\r\n            case 'password':\r\n                formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors, [name]: value\r\n        }, () => console.log(this.state))\r\n    }\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"wrapper\" >\r\n                <div className=\"form-wrapper\">\r\n                    <h1> Create account </h1>\r\n                    <form onSubmit={this.handleSubmit} noValidate>\r\n                        <div className=\"firstName\" >\r\n                            <label htmlFor=\"firstName\" > First Name: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                                placeholder=\"First Name\"\r\n                                name=\"firstName\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.firstName.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.firstName} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"lastName\" >\r\n                            <label htmlFor=\"lastName\" > Last Name: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.lastName.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.lastName} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"email\" >\r\n                            <label htmlFor=\"email\" > E-Mail: </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                placeholder=\"E-Mail\"\r\n                                name=\"email\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.email.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.email} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"password\" >\r\n                            <label htmlFor=\"password\" > Password: </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className={formErrors.password.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.password.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.password} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"createAccount\" >\r\n                            <button type=\"submit\"> Create Account</button>\r\n                            <small> Already have an account</small>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}