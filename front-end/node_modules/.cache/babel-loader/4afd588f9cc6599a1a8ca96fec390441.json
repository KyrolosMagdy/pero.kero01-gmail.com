{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\front-end\\\\src\\\\pages\\\\signin-form\\\\signin-form.page.jsx\";\nimport React from 'react';\nimport Button from '../../components/button/button.component';\nimport './signin-form.styles.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 ? valid = false : valid = true;\n  });\n  Object.values(rest).forEach(val => {\n    !val.length && (valid = false);\n  });\n  return valid;\n};\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        onRouteChange\n      } = this.props;\n\n      if (formValid(this.state)) {\n        console.log(`\n        Submitting\n        email: ${this.state.email},\n        password: ${this.state.password},\n      `);\n        onRouteChange('home');\n      } else {\n        console.error('error');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" SignIn \"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" E-Mail: \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"E-Mail\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", formErrors.email, \" \")), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" \", formErrors.password, \" \")), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonContent: 'Sign In',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      className: \"smallButton\",\n      onClick: () => this.props.onRouteChange('register'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Don't have an account? \")))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["E:/javascript/formvalidation/front-end/src/pages/signin-form/signin-form.page.jsx"],"names":["React","Button","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignIn","Component","constructor","handleSubmit","event","preventDefault","onRouteChange","props","state","console","log","email","password","error","handleChange","name","value","target","test","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '../../components/button/button.component';\r\n\r\nimport './signin-form.styles.css';\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 ? valid = false : valid = true\r\n    })\r\n\r\n    Object.values(rest).forEach(val => {\r\n        !val.length && (valid = false)\r\n    })\r\n    return valid;\r\n}\r\n\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            formErrors: {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {onRouteChange} = this.props;\r\n\r\n        if (formValid(this.state)) {\r\n            console.log(`\r\n        Submitting\r\n        email: ${this.state.email},\r\n        password: ${this.state.password},\r\n      `);\r\n            onRouteChange('home');\r\n        } else {\r\n            console.error('error')\r\n        }\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                formErrors.email = emailRegex.test(value) ? '' : 'invalid email address';\r\n                break;\r\n            case 'password':\r\n                formErrors.password = value.length < 6 ? 'Minimum 6 characaters required' : '';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors, [name]: value\r\n        }, () => console.log(this.state))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"wrapper\" >\r\n                <div className=\"form-wrapper\">\r\n                    <h1> SignIn </h1>\r\n                    <form onSubmit={this.handleSubmit} noValidate>\r\n                        <div className=\"email\" >\r\n                            <label htmlFor=\"email\" > E-Mail: </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                placeholder=\"E-Mail\"\r\n                                name=\"email\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.email.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.email} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"password\" >\r\n                            <label htmlFor=\"password\" > Password: </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className={formErrors.password.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                noValidate\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {formErrors.password.length > 0 &&\r\n                                <span className=\"errorMessage\"> {formErrors.password} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"createAccount\" >\r\n                            <Button buttonContent={'Sign In'} />\r\n                            <small className='smallButton' onClick = {() => this.props.onRouteChange('register')}> Don't have an account? </small>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}