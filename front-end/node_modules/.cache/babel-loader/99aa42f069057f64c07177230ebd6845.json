{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\formvalidation\\\\front-end\\\\src\\\\components\\\\message-inputs\\\\message-inputs.component.jsx\";\nimport React from 'react';\nimport './message-input.styles.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 ? valid = false : valid = true;\n  });\n  Object.values(rest).forEach(val => {\n    !val.length && (valid = false);\n  });\n  return valid;\n};\n\nclass InputsForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMessages = direction => {\n      if (direction) {\n        this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      let page = this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n        this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n        this.setState({\n          postPage: page\n        });\n      }\n\n      fetch('URL').then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.setState({\n          posts: resData.posts,\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(this.catchError);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        onRouteChange\n      } = this.props;\n\n      if (formValid(this.state)) {\n        console.log(`\n        Submitting\n        messageTitle: ${this.state.messageTitle}\n        messageContent: ${this.state.messageContent},\n        email: ${this.state.messageTo}\n      `);\n        onRouteChange('home');\n      } else {\n        console.error('error');\n      }\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'messageTitle':\n          formErrors.messageTitle = value.length < 3 ? 'Minimum 3 characaters required' : '';\n          break;\n\n        case 'messageContent':\n          formErrors.messageContent = value.length < 20 ? 'Minimum 20 characaters required' : '';\n          break;\n\n        case 'messageTo':\n          formErrors.messageTo = emailRegex.test(value) ? '' : 'invalid email address';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const {\n        handleClick\n      } = this.props;\n      handleClick();\n    };\n\n    this.state = {\n      messageTitle: '',\n      messageContent: '',\n      to: '',\n      formErrors: {\n        messageTo: '',\n        messageTitle: '',\n        messageContent: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('URL').then(res => {\n      if (res.status !== 200) {\n        throw new Error('Failed to fetch user status.');\n      }\n\n      return res.json();\n    }).then(resData => {\n      this.setState({\n        status: resData.status\n      });\n    }).catch(this.catchError);\n    this.loadMessages();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"remove-button\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u2715\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" Send a New Message \"), React.createElement(\"form\", {\n      onSubmit: this.handleInputChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messageTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" To: \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: this.state.formErrors.messageTo.length > 0 ? \"error\" : null,\n      placeholder: \"Email like asfdfgd12@jhffd.com\",\n      name: \"messageTo\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.state.formErrors.messageTo.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageTo, \" \")), React.createElement(\"div\", {\n      className: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" Title: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: this.state.formErrors.messageTitle.length > 0 ? \"error\" : null,\n      placeholder: \"Add Message title\",\n      name: \"messageTitle\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), this.state.formErrors.messageTitle.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageTitle, \" \")), React.createElement(\"div\", {\n      className: \"messageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"messageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \" Message: \"), React.createElement(\"textarea\", {\n      type: \"messageContent\",\n      className: this.state.formErrors.messageContent.length > 0 ? \"error\" : 'textarea',\n      placeholder: \"Enter Your Message\",\n      name: \"messageContent\",\n      noValidate: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), this.state.formErrors.messageContent.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" \", this.state.formErrors.messageContent, \" \")), React.createElement(\"div\", {\n      className: \"messageButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" Send Message \"))))) // <div className='container' >\n    //     <div className='form-wrapper'>\n    //         <form>\n    //             <label>To: </label>\n    //             <input\n    //                 type='email'\n    //                 name='messageTo'\n    //                 onChange={this.handleInputChange}\n    //             />\n    //             <label> Title </label>\n    //             <input\n    //                 type='text'\n    //                 name='messageTitle'\n    //                 onChange={this.handleInputChange}\n    //             />\n    //             <textarea name='messageContent' onChange={this.handleInputChange} />\n    //         </form>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default InputsForm;","map":{"version":3,"sources":["E:/javascript/formvalidation/front-end/src/components/message-inputs/message-inputs.component.jsx"],"names":["React","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","InputsForm","Component","constructor","props","loadMessages","direction","setState","postsLoading","posts","page","state","postPage","fetch","then","res","status","Error","json","resData","totalPosts","totalItems","catch","catchError","handleSubmit","event","preventDefault","onRouteChange","console","log","messageTitle","messageContent","messageTo","error","handleInputChange","name","value","target","test","handleClick","e","to","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './message-input.styles.css';\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 ? valid = false : valid = true\r\n    })\r\n\r\n    Object.values(rest).forEach(val => {\r\n        !val.length && (valid = false)\r\n    })\r\n    return valid;\r\n}\r\n\r\n\r\nclass InputsForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messageTitle: '',\r\n            messageContent: '',\r\n            to: '',\r\n            formErrors: {\r\n                messageTo: '',\r\n                messageTitle: '',\r\n                messageContent: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('URL')\r\n          .then(res => {\r\n            if (res.status !== 200) {\r\n              throw new Error('Failed to fetch user status.');\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(resData => {\r\n            this.setState({ status: resData.status });\r\n          })\r\n          .catch(this.catchError);\r\n    \r\n        this.loadMessages();\r\n      }\r\n    \r\n      loadMessages = direction => {\r\n        if (direction) {\r\n          this.setState({ postsLoading: true, posts: [] });\r\n        }\r\n        let page = this.state.postPage;\r\n        if (direction === 'next') {\r\n          page++;\r\n          this.setState({ postPage: page });\r\n        }\r\n        if (direction === 'previous') {\r\n          page--;\r\n          this.setState({ postPage: page });\r\n        }\r\n        fetch('URL')\r\n          .then(res => {\r\n            if (res.status !== 200) {\r\n              throw new Error('Failed to fetch posts.');\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(resData => {\r\n            this.setState({\r\n              posts: resData.posts,\r\n              totalPosts: resData.totalItems,\r\n              postsLoading: false\r\n            });\r\n          })\r\n          .catch(this.catchError);\r\n      };\r\n    \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {onRouteChange} = this.props;\r\n\r\n        if (formValid(this.state)) {\r\n            console.log(`\r\n        Submitting\r\n        messageTitle: ${this.state.messageTitle}\r\n        messageContent: ${this.state.messageContent},\r\n        email: ${this.state.messageTo}\r\n      `);\r\n            onRouteChange('home');\r\n        } else {\r\n            console.error('error')\r\n        }\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        switch (name) {\r\n            case 'messageTitle':\r\n                formErrors.messageTitle = value.length < 3 ? 'Minimum 3 characaters required' : '';\r\n                break;\r\n\r\n            case 'messageContent':\r\n                formErrors.messageContent = value.length < 20 ? 'Minimum 20 characaters required' : '';\r\n                break;\r\n            case 'messageTo':\r\n                formErrors.messageTo = emailRegex.test(value) ? '' : 'invalid email address';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors, [name]: value\r\n        }, () => console.log(this.state))\r\n    \r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        const {handleClick} = this.props;\r\n        handleClick();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper-2\" >\r\n                <div className=\"form-wrapper\">\r\n                <div className='remove-button' onClick={this.handleClick}>\r\n                    &#10005;\r\n                </div>\r\n\r\n\r\n                    <h1> Send a New Message </h1>\r\n                    <form onSubmit={this.handleInputChange} noValidate>\r\n                        <div className=\"messageTo\" >\r\n                            <label htmlFor=\"messageTo\" > To: </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className={this.state.formErrors.messageTo.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Email like asfdfgd12@jhffd.com\"\r\n                                name=\"messageTo\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageTo.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageTo} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageTitle\" >\r\n                            <label htmlFor=\"messageTitle\" > Title: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={this.state.formErrors.messageTitle.length > 0 ? \"error\" : null}\r\n                                placeholder=\"Add Message title\"\r\n                                name=\"messageTitle\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageTitle.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageTitle} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageContent\" >\r\n                            <label htmlFor=\"messageContent\" > Message: </label>\r\n                            <textarea\r\n                                type=\"messageContent\"\r\n                                className={this.state.formErrors.messageContent.length > 0 ? \"error\" : 'textarea'}\r\n                                placeholder=\"Enter Your Message\"\r\n                                name=\"messageContent\"\r\n                                noValidate\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            {this.state.formErrors.messageContent.length > 0 &&\r\n                                <span className=\"errorMessage\"> {this.state.formErrors.messageContent} </span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"messageButton\" >\r\n                            <button type=\"submit\"> Send Message </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            // <div className='container' >\r\n            //     <div className='form-wrapper'>\r\n            //         <form>\r\n            //             <label>To: </label>\r\n            //             <input\r\n            //                 type='email'\r\n            //                 name='messageTo'\r\n            //                 onChange={this.handleInputChange}\r\n            //             />\r\n            //             <label> Title </label>\r\n            //             <input\r\n            //                 type='text'\r\n            //                 name='messageTitle'\r\n            //                 onChange={this.handleInputChange}\r\n            //             />\r\n\r\n            //             <textarea name='messageContent' onChange={this.handleInputChange} />\r\n            //         </form>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default InputsForm;"]},"metadata":{},"sourceType":"module"}